#N canvas 54 35 1795 858 10;
#X floatatom 1432 611 10 0 0 1 loss - - 0;
#X floatatom 1409 634 10 0 0 1 accuracy - - 0;
#X floatatom 1365 657 8 0 0 1 epoch - - 0;
#X msg 456 68 poll;
#X msg 498 68 nopoll;
#X msg 1321 411 destroy;
#X obj 879 703 *~, f 4;
#X obj 879 724 dac~;
#X obj 904 637 hsl 128 15 0 1 0 0 empty empty Volume -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 901 680 line~;
#X floatatom 483 251 8 0 0 1 x - - 0;
#X floatatom 576 250 8 0 0 1 y - - 0;
#X msg 459 571 shuffle_train_set;
#X msg 458 705 train 10;
#X msg 48 370 set_loss_function mse;
#X msg 48 439 set_optimizer adam;
#X obj 880 452 spigot;
#X obj 913 431 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X listbox 1321 226 20 0 0 1 model_name - - 0;
#X obj 1321 277 pack s f;
#X floatatom 1366 253 5 0 0 1 ramp_time - - 0;
#X msg 1322 507 abort_training;
#X msg 881 301 validate;
#X floatatom 50 734 5 0 0 0 - - - 0;
#X msg 50 756 desired_accuracy \$1;
#X msg 1028 182 release_mem;
#X msg 603 479 store;
#X msg 603 501 show;
#X msg 640 502 clear;
#X msg 682 502 hide;
#X obj 601 447 bng 15 250 50 0 empty empty set_params_randomly 17 7
0 10 #fcfcfc #000000 #000000;
#X obj 459 550 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#N canvas 426 183 647 699 create_training_set 0;
#X obj 30 193 metro 10;
#X obj 30 217 t b b;
#X obj 30 459 spigot 1;
#X obj 75 436 r \$0-spigots;
#X obj 30 508 list append;
#X obj 30 556 list trim;
#X obj 30 533 list prepend add;
#X obj 30 11 inlet;
#X obj 107 509 print training_data;
#X obj 30 85 t f f;
#X obj 93 334 spigot 1;
#X obj 30 61 t f b;
#X msg 138 282 1;
#X text 154 336 don't let one random target too many through;
#X msg 30 35 1;
#X obj 288 21 inlet;
#X obj 288 44 route bang store;
#X obj 334 91 s \$0-store;
#X obj 47 163 r \$0-close_metro;
#N canvas 106 415 441 397 done 0;
#X obj 20 20 inlet;
#X obj 20 313 outlet;
#X obj 47 82 t b b;
#X msg 47 240 0;
#X obj 47 181 t b b;
#X obj 47 263 s \$0-spigots;
#X obj 20 60 t b b;
#X msg 20 289 0;
#X msg 74 105 0;
#X obj 74 128 s \$0-close_metro;
#X text 89 180 also \, normalize the values of the synth parameters
;
#X obj 74 240 s acc_input_example;
#X msg 74 209 normalize_output 1000 1000 1000 1000;
#X connect 0 0 6 0;
#X connect 2 0 4 0;
#X connect 2 1 8 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 4 1 12 0;
#X connect 6 0 7 0;
#X connect 6 1 2 0;
#X connect 7 0 1 0;
#X connect 8 0 9 0;
#X connect 12 0 11 0;
#X restore 168 293 pd done;
#N canvas 734 306 363 265 get_params 0;
#X obj 20 20 inlet;
#X obj 20 182 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X obj 20 152 text get \$0-params;
#X text 78 108 get the stored parameters one by one;
#X connect 0 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 1;
#X connect 7 0 1 0;
#X restore 93 410 pd get_params;
#N canvas 792 594 762 370 randomize_coords 0;
#X obj 20 20 inlet;
#X obj 20 297 outlet;
#X obj 20 249 +;
#X obj 90 249 +;
#X obj 107 204 unpack f f f;
#X obj 20 272 pack f f f, f 24;
#X obj 20 60 t b b b, f 24;
#X obj 161 249 +;
#X text 183 57 provide small variations on the accelerometer values
;
#X obj 20 145 clip 0 1;
#X obj 90 145 clip 0 1;
#X obj 161 145 clip 0 1;
#N canvas 498 535 360 272 get_accel_vals 0;
#X obj 20 20 inlet;
#X obj 20 182 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X text 78 108 get the stored parameters one by one;
#X obj 20 152 text get \$0-acc_vals;
#X connect 0 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 4 1 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 1;
#X connect 8 0 1 0;
#X restore 107 181 pd get_accel_vals;
#X obj 107 20 inlet;
#X obj 20 121 / 100000;
#X obj 90 121 / 100000;
#X obj 161 121 / 100000;
#X obj 20 98 random 500;
#X obj 90 98 random 500;
#X obj 161 98 random 500;
#X connect 0 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 5 1;
#X connect 4 0 2 1;
#X connect 4 1 3 1;
#X connect 4 2 7 1;
#X connect 5 0 1 0;
#X connect 6 0 17 0;
#X connect 6 1 18 0;
#X connect 6 2 19 0;
#X connect 7 0 5 2;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 7 0;
#X connect 12 0 4 0;
#X connect 13 0 12 0;
#X connect 14 0 9 0;
#X connect 15 0 10 0;
#X connect 16 0 11 0;
#X connect 17 0 14 0;
#X connect 18 0 15 0;
#X connect 19 0 16 0;
#X restore 30 484 pd randomize_coords;
#N canvas 584 237 200 190 reset 0;
#X obj 20 20 inlet;
#X msg 97 101 1;
#X obj 20 124 s \$0-reset;
#X obj 97 124 s \$0-spigots;
#X obj 20 60 sel 1;
#X obj 20 83 t b b;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 5 1 1 0;
#X restore 57 112 pd reset;
#N canvas 442 227 338 300 set_params 0;
#X obj 43 30 inlet;
#X obj 43 56 t b b b b, f 19;
#X obj 43 220 random 1000;
#X obj 80 173 random 1000;
#X obj 117 150 s delay;
#X obj 154 105 s feedback;
#X obj 117 128 random 1000;
#X obj 154 83 random 1000;
#X obj 43 244 s amplitude;
#X obj 80 197 s pulse;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 1 2 6 0;
#X connect 1 3 7 0;
#X connect 2 0 8 0;
#X connect 3 0 9 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X restore 288 175 pd set_params;
#X obj 288 91 t b b;
#X msg 315 115 1;
#X obj 315 138 s \$0-spigots;
#X obj 168 316 t f b;
#X obj 449 334 outlet;
#N canvas 958 533 548 272 counter 0;
#X obj 20 20 inlet;
#X obj 20 212 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X obj 20 152 sel 1e+20;
#X obj 119 60 r \$0-num_params;
#X text 83 151 initial large number that is replaced by the number
of synth parameters and positions stored;
#X connect 0 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 7 0;
#X connect 4 1 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 1;
#X connect 7 0 1 0;
#X connect 8 0 7 1;
#X restore 168 270 pd counter;
#X obj 93 372 t b b;
#N canvas 860 266 839 467 store_params_and_accel_vals 0;
#X obj 20 20 inlet;
#X obj 248 325 loadbang;
#X msg 248 348 1e+15;
#X obj 213 296 spigot 1;
#X obj 258 272 r \$0-spigots;
#X msg 61 132 clear;
#X msg 20 157 click;
#X msg 102 109 close;
#X obj 213 272 list;
#X obj 213 77 r \$0-store;
#X obj 20 81 route show clear hide;
#X obj 20 203 text define \$0-params;
#X obj 213 376 text set \$0-params;
#X obj 520 118 f;
#X obj 520 141 t f f;
#X obj 547 118 + 1;
#X obj 535 70 r \$0-reset;
#X msg 535 93 0;
#X obj 520 164 s \$0-num_params;
#X obj 456 243 r accel_vals;
#X obj 474 325 loadbang;
#X msg 474 348 1e+15;
#X obj 435 296 spigot 1;
#X obj 480 272 r \$0-spigots;
#X obj 435 272 list;
#X obj 213 100 t b b b;
#X obj 569 376 text define \$0-acc_vals;
#X obj 435 376 text set \$0-acc_vals;
#X obj 234 243 pack f f f f;
#X obj 280 172 r delay;
#X obj 303 194 r feedback;
#X obj 234 130 r amplitude;
#X obj 257 151 r pulse;
#X connect 0 0 10 0;
#X connect 1 0 2 0;
#X connect 2 0 12 1;
#X connect 3 0 12 0;
#X connect 4 0 3 1;
#X connect 5 0 11 0;
#X connect 5 0 26 0;
#X connect 6 0 11 0;
#X connect 7 0 11 0;
#X connect 8 0 3 0;
#X connect 9 0 25 0;
#X connect 10 0 6 0;
#X connect 10 1 5 0;
#X connect 10 2 7 0;
#X connect 13 0 14 0;
#X connect 14 0 18 0;
#X connect 14 1 15 0;
#X connect 15 0 13 1;
#X connect 16 0 17 0;
#X connect 17 0 13 1;
#X connect 19 0 24 1;
#X connect 20 0 21 0;
#X connect 21 0 27 1;
#X connect 22 0 27 0;
#X connect 23 0 22 1;
#X connect 24 0 22 0;
#X connect 25 0 8 0;
#X connect 25 1 24 0;
#X connect 25 2 13 0;
#X connect 28 0 8 1;
#X connect 29 0 28 2;
#X connect 30 0 28 3;
#X connect 31 0 28 0;
#X connect 32 0 28 1;
#X restore 381 67 pd store_params_and_accel_vals;
#X obj 30 579 s reg_example;
#N canvas 498 293 227 298 counter 0;
#X obj 20 20 inlet;
#X obj 20 238 outlet;
#X obj 69 238 outlet;
#X obj 35 60 r \$0-reset;
#X obj 20 106 f;
#X obj 20 129 t f f;
#X obj 47 106 + 1;
#X msg 35 83 0;
#X obj 42 178 t b b;
#X obj 20 154 sel 0 99;
#X connect 0 0 4 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 5 1 6 0;
#X connect 6 0 4 1;
#X connect 7 0 4 1;
#X connect 8 0 7 0;
#X connect 8 1 2 0;
#X connect 9 0 1 0;
#X connect 9 1 8 0;
#X restore 93 235 pd counter 99;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 33 0;
#X connect 2 0 21 0;
#X connect 3 0 2 1;
#X connect 4 0 6 0;
#X connect 4 0 8 0;
#X connect 5 0 32 0;
#X connect 6 0 5 0;
#X connect 7 0 14 0;
#X connect 9 0 0 0;
#X connect 9 1 22 0;
#X connect 10 0 30 0;
#X connect 11 0 9 0;
#X connect 11 1 12 0;
#X connect 12 0 10 1;
#X connect 14 0 11 0;
#X connect 15 0 16 0;
#X connect 16 0 24 0;
#X connect 16 1 17 0;
#X connect 16 2 31 0;
#X connect 18 0 0 0;
#X connect 19 0 27 0;
#X connect 20 0 4 1;
#X connect 21 0 4 0;
#X connect 24 0 23 0;
#X connect 24 1 25 0;
#X connect 25 0 26 0;
#X connect 27 0 10 1;
#X connect 27 1 28 0;
#X connect 29 0 19 0;
#X connect 30 0 20 0;
#X connect 30 1 21 1;
#X connect 33 0 10 0;
#X connect 33 1 29 0;
#X restore 459 526 pd create_training_set;
#X text 482 549 bangs when the training dataset is done;
#X text 1320 466 in case you see the accuracy and loss value being
stuck to only slight variations \, you can abort the training before
it is over;
#X msg 882 182 retrain;
#X text 571 569 shuffles training dataset for better fitting;
#N canvas 271 165 642 448 some_notes 0;
#X floatatom 44 245 5 0 0 0 - - - 0;
#X msg 44 267 set_accuracy_denominator \$1;
#X text 43 33 One of the most important details with neural networks
is the training dataset. A dataset can make a network learn well \,
or make it overfit and not perform properly. In this example I have
created 100 iterations for each group of values \, where each iteration
has a small variation in the accelerometer values (open [pd create_training_set]
to see how this is done). It took quite some iterations before I ended
up in this setting.;
#X text 43 146 You are free to experiment with different datasets to
see if you can get better results. If you're fine with the results
\, but the accuracy is still not satisfactory \, you can reduce the
accuracy denominator (default is 250) with the message below \, which
will make [neuralnet] more tolerant and will output a higher accuracy.
;
#X obj 44 290 s reg_example;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X restore 1319 759 pd some_notes;
#X floatatom 669 250 8 0 0 1 z - - 0;
#X obj 459 497 bng 15 250 50 0 empty empty create_dataset 17 7 0 10
#fcfcfc #000000 #000000;
#X obj 882 208 s acc_input_example;
#X obj 880 411 r accel_vals;
#X msg 880 475 predict \$1 \$2 \$3;
#X text 1319 172 17) you can also morph between saved models (mind
\, if you haven't saved your model and call "morph" with another model
\, the current one will be lost);
#X text 1319 374 18) when done \, destroy the network if you want to
(it will be destroyed when this patch is closed);
#X msg 48 580 set_decay 0.0001;
#X msg 938 182 keep_training;
#X msg 48 650 set_epochs 2000;
#X obj 1321 587 neuralnet;
#X obj 48 241 s reg_example;
#X obj 48 159 s reg_example;
#X msg 48 219 regression;
#X text 46 112 1) set the network size;
#X text 46 194 2) set the network mode;
#X obj 48 325 s reg_example;
#X obj 48 393 s reg_example;
#X obj 48 462 s reg_example;
#X obj 48 534 s reg_example;
#X obj 48 603 s reg_example;
#X text 48 699 9) set a desired minimum accuracy if you want to be
able to retraing the model without repeating the process in step 10
;
#X text 47 628 8) set number of epochs;
#X text 47 559 7) set the decay of the learning rate;
#X text 45 487 6) set the learning rate;
#X text 45 417 5) set the optimizer;
#X text 48 348 4) set the loss function;
#X text 47 267 3) set the activation functions;
#X text 453 43 10) start polling accelerometer;
#N canvas 208 233 675 367 set_params_manually 0;
#X floatatom 44 27 8 0 0 2 modulator - - 0;
#X floatatom 123 27 8 0 0 2 index - - 0;
#X floatatom 203 27 8 0 0 2 delay - - 0;
#X floatatom 293 27 8 0 0 2 feedback - - 0;
#X obj 120 59 t b f;
#X obj 204 63 t b f;
#X obj 293 59 t b f;
#X obj 231 94 s delay;
#X obj 320 92 s feedback;
#X obj 44 90 s amplitude;
#X obj 148 91 s pulse;
#X connect 0 0 9 0;
#X connect 1 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 6 0;
#X connect 4 0 0 0;
#X connect 4 1 10 0;
#X connect 5 0 0 0;
#X connect 5 1 7 0;
#X connect 6 0 0 0;
#X connect 6 1 8 0;
#X restore 455 447 pd set_params_manually;
#X obj 48 674 s reg_example;
#X obj 50 779 s reg_example;
#X obj 881 324 s reg_example;
#X obj 458 728 s reg_example;
#X obj 459 594 s reg_example;
#X obj 880 498 s reg_example;
#X obj 1320 121 s reg_example;
#X obj 1321 324 s reg_example;
#X obj 1321 436 s reg_example;
#X obj 456 293 pack f f f;
#X obj 456 221 t f f;
#X obj 549 221 t f f;
#X obj 642 221 t f f;
#X obj 456 316 s accel_vals;
#X obj 456 93 route poll nopoll;
#X msg 505 116 0;
#X msg 456 143 listen \$1;
#X msg 456 116 8001;
#X obj 456 192 unpack f f f;
#X obj 456 169 netreceive -u;
#X text 878 378 15) open the [spigot] below to start predicting with
new data;
#X text 455 659 12) train the network. the argument is percentage of
data to be used for validating. in this case we'll use 10% of the data
to validate the model;
#X text 879 42 13) in case you have set a desired accuracy \, and the
accuracy of [neuralnet] has not reached it \, the training dataset
will not be erased from its memory. If you want to change some parameters
and retrain the network \, first change any parameters you want \,
and then send "retrain" to train from scratch \, or "keep_training"
to start over without resetting the weights and biases. Otherwise \,
if you still want to move on with validating and making predictions
\, send the "release_mem" message first. If you haven't set a desired
accuracy \, don't send any of these messages \, as Pd will most likely
crash;
#X text 879 258 14) validate the network with 10% of the training data
set. check the number of atoms connected to the outlets of [neuralnet]
to see if they change;
#X text 453 375 11) set the FM synthesis parameters either manually
or random \, then click on "store" to create a pair input-output. When
done \, click on create dataset (the dataset will be augmented by a
factor 10 - each example will be replicated 10 times adding a bit of
noise to the accelerometer data).;
#X msg 48 137 create 3 64 64 4;
#X obj 1507 716 s delay;
#X obj 1600 716 s feedback;
#X obj 1321 693 unpack f f f f, f 47;
#X obj 901 657 pack 0 50;
#X text 1319 38 16) to save your model write the filename and the full
path;
#N canvas 344 96 923 733 synthesis 0;
#X floatatom 522 81 8 0 0 2 amplitude - - 0;
#X floatatom 591 81 8 0 0 2 pulse - - 0;
#X floatatom 663 81 8 0 0 2 delay - - 0;
#X floatatom 729 81 8 0 0 2 feedback - - 0;
#X obj 130 556 *~;
#X obj 663 7 r delay;
#X obj 729 7 r feedback;
#X text 660 53 Feedback modulation;
#X obj 93 651 *~;
#X obj 94 679 outlet~;
#X text 86 103 <<< convert midi to frequency;
#X obj 53 166 spigot;
#X obj 53 103 mtof;
#X obj 86 146 > 207;
#X text 109 190 <<< part stream of numbers to remove continuous rumble
;
#X obj 53 189 moses 1;
#X text 202 82 <<< sinusoidal analysis and pitch tracking;
#X obj 53 35 inlet~;
#X obj 112 127 r fmin;
#X text 124 147 <<< block messages under lowest saxophone frequency
;
#X obj 51 597 sel 0;
#X msg 51 620 0;
#X msg 51 574 1;
#X text 90 599 <<< turn off volume if no notes are played;
#X text 59 64 Pitch tracking;
#X obj 53 82 sigmund~ -hop 512 pitch;
#X text 129 514 FEEDBACK MODULATION;
#X obj 729 158 pack 0 50;
#X obj 729 181 line~;
#X text 768 182 <<< to avoid clicks;
#X obj 181 244 pack 0 50;
#X obj 181 264 line~;
#X text 220 265 <<< to avoid clicks;
#X obj 130 536 delread4~ \$0-buffer 0;
#X obj 663 113 pack 0 50;
#X obj 663 136 line~;
#X text 700 137 <<< to avoid clicks;
#X obj 92 243 sig~;
#X obj 93 282 +~;
#X obj 93 302 phasor~;
#X obj 599 23 * 0.001;
#X obj 94 483 *~;
#X obj 109 420 osc~;
#X obj 109 441 +~ 1;
#X obj 109 462 *~ 0.5;
#X obj 522 7 r amplitude;
#X obj 599 7 r pulse;
#X text 158 445 <<< add 1 to the signal and multiply by 0.5 to get
an output range from 0 to 1;
#X text 517 53 AM/PWM modulation;
#X obj 181 304 abs~;
#X obj 181 285 osc~;
#X obj 109 263 osc~ 5;
#X obj 94 325 expr~ $v1 > $v2;
#X text 218 286 <<< LFO sine wave ranging from -1 to 1;
#X text 217 304 <<< convert values between 0 to 1;
#X text 106 400 AMPLITUDE MODULATION;
#X text 99 223 PULSE WIDTH MODULATION;
#X obj 659 392 metro 100;
#X obj 659 413 snapshot~;
#X obj 659 434 print;
#X obj 661 361 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 729 23 * 0.001;
#X obj 131 577 delwrite~ \$0-buffer 1000;
#X obj 94 346 -~ 0.5;
#X obj 93 365 *~ 2;
#X text 127 365 <<< convert values between -1 to 1;
#X obj 522 24 * 0.01;
#X connect 0 0 42 0;
#X connect 1 0 30 0;
#X connect 2 0 34 0;
#X connect 3 0 27 0;
#X connect 4 0 8 0;
#X connect 4 0 62 0;
#X connect 5 0 2 0;
#X connect 6 0 61 0;
#X connect 8 0 9 0;
#X connect 11 0 15 0;
#X connect 12 0 11 0;
#X connect 12 0 13 0;
#X connect 13 0 11 1;
#X connect 15 0 20 0;
#X connect 15 1 22 0;
#X connect 15 1 37 0;
#X connect 17 0 25 0;
#X connect 18 0 13 1;
#X connect 20 0 21 0;
#X connect 20 1 8 1;
#X connect 21 0 8 1;
#X connect 22 0 20 0;
#X connect 25 0 12 0;
#X connect 27 0 28 0;
#X connect 28 0 4 1;
#X connect 30 0 31 0;
#X connect 31 0 50 0;
#X connect 33 0 4 0;
#X connect 34 0 35 0;
#X connect 35 0 33 0;
#X connect 37 0 38 0;
#X connect 38 0 39 0;
#X connect 39 0 52 0;
#X connect 40 0 1 0;
#X connect 41 0 62 0;
#X connect 41 0 8 0;
#X connect 42 0 43 0;
#X connect 43 0 44 0;
#X connect 44 0 41 1;
#X connect 45 0 66 0;
#X connect 46 0 40 0;
#X connect 49 0 52 1;
#X connect 50 0 49 0;
#X connect 51 0 38 1;
#X connect 52 0 63 0;
#X connect 57 0 58 0;
#X connect 58 0 59 0;
#X connect 60 0 57 0;
#X connect 61 0 3 0;
#X connect 63 0 64 0;
#X connect 64 0 41 0;
#X connect 66 0 0 0;
#X coords 0 -1 1 1 280 65 1 510 40;
#X restore 880 556 pd synthesis;
#X obj 879 532 adc~;
#X text 917 532 Sound synthesis engine with 4 control parameters;
#X obj 1322 527 s reg_example;
#X obj 1321 566 r reg_example;
#X msg 1320 64 save /Users/Joachim/Desktop/Saxelerophone/reg_model.ann
;
#X msg 1340 87 load /Users/Joachim/Desktop/Saxelerophone/reg_model.ann
;
#X msg 48 289 set_activation_function 0 relu \, set_activation_function
1 relu \, set_activation_function 2 linear;
#X msg 48 511 set_learning_rate 0.001;
#X msg 1321 301 morph \$1.ann \$2;
#X text 47 29 Saxelerophone: training the regression model;
#X text 47 45 ============================================;
#X text 47 59 This example is adapted from the collection of [neuralnet]
examples from Alexandros Drymonitisis, f 37;
#X obj 1321 716 s amplitude;
#X obj 1414 716 s pulse;
#X connect 3 0 82 0;
#X connect 4 0 82 0;
#X connect 5 0 76 0;
#X connect 6 0 7 0;
#X connect 6 0 7 1;
#X connect 8 0 97 0;
#X connect 9 0 6 1;
#X connect 12 0 72 0;
#X connect 13 0 71 0;
#X connect 14 0 55 0;
#X connect 15 0 56 0;
#X connect 16 0 42 0;
#X connect 17 0 16 1;
#X connect 18 0 19 0;
#X connect 19 0 108 0;
#X connect 20 0 19 1;
#X connect 21 0 102 0;
#X connect 22 0 70 0;
#X connect 23 0 24 0;
#X connect 24 0 69 0;
#X connect 25 0 40 0;
#X connect 26 0 32 1;
#X connect 27 0 32 1;
#X connect 28 0 32 1;
#X connect 29 0 32 1;
#X connect 30 0 32 1;
#X connect 31 0 12 0;
#X connect 32 0 31 0;
#X connect 35 0 40 0;
#X connect 39 0 32 0;
#X connect 41 0 16 0;
#X connect 42 0 73 0;
#X connect 45 0 58 0;
#X connect 46 0 40 0;
#X connect 47 0 68 0;
#X connect 48 0 96 0;
#X connect 48 2 2 0;
#X connect 48 4 1 0;
#X connect 48 5 0 0;
#X connect 51 0 49 0;
#X connect 77 0 81 0;
#X connect 78 0 77 0;
#X connect 78 1 10 0;
#X connect 79 0 77 1;
#X connect 79 1 11 0;
#X connect 80 0 77 2;
#X connect 80 1 38 0;
#X connect 82 0 85 0;
#X connect 82 1 83 0;
#X connect 83 0 84 0;
#X connect 84 0 87 0;
#X connect 85 0 84 0;
#X connect 86 0 78 0;
#X connect 86 1 79 0;
#X connect 86 2 80 0;
#X connect 87 0 86 0;
#X connect 93 0 50 0;
#X connect 96 0 112 0;
#X connect 96 1 113 0;
#X connect 96 2 94 0;
#X connect 96 3 95 0;
#X connect 97 0 9 0;
#X connect 99 0 6 0;
#X connect 100 0 99 0;
#X connect 103 0 48 0;
#X connect 104 0 74 0;
#X connect 105 0 74 0;
#X connect 106 0 54 0;
#X connect 107 0 57 0;
#X connect 108 0 75 0;
